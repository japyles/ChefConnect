-- Drop all RLS policies on recipes (explicitly, by name)
DROP POLICY IF EXISTS "Allow users to read all recipes" ON recipes;
DROP POLICY IF EXISTS "Allow users to insert their own recipes" ON recipes;
DROP POLICY IF EXISTS "Allow users to update their own recipes" ON recipes;
DROP POLICY IF EXISTS "Allow users to delete their own recipes" ON recipes;

-- Alter user_id column to UUID
DROP INDEX IF EXISTS recipes_user_id_idx;
ALTER TABLE recipes ALTER COLUMN user_id TYPE UUID USING user_id::uuid;

-- Add foreign key from recipes.user_id to user_profiles.id
ALTER TABLE recipes ADD CONSTRAINT fk_recipes_user_id_uuid FOREIGN KEY (user_id) REFERENCES user_profiles(id);

-- Recreate RLS policies for recipes
ALTER TABLE recipes ENABLE ROW LEVEL SECURITY;

CREATE POLICY "Allow users to read all recipes" ON recipes FOR SELECT TO authenticated USING (true);

CREATE POLICY "Allow users to insert their own recipes" ON recipes FOR INSERT TO authenticated USING (user_id = auth.uid()::uuid) WITH CHECK (user_id = auth.uid()::uuid);

CREATE POLICY "Allow users to update their own recipes" ON recipes FOR UPDATE TO authenticated USING (user_id = auth.uid()::uuid);

CREATE POLICY "Allow users to delete their own recipes" ON recipes FOR DELETE TO authenticated USING (user_id = auth.uid()::uuid);

-- Recreate index for user_id
CREATE INDEX recipes_user_id_idx ON recipes(user_id);
